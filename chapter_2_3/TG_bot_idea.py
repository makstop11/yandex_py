import random
import time
import math


# random.seed(int(time.time()))

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
def hallo_game():
    hallo = random.choice(['\nüëãüëãüëã –ü—Ä–∏–≤–µ—Ç –î—Ä—É–≥‚ùóÔ∏è –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ —á–∏—Å–ª–æ–≤—É—é —É–≥–∞–¥–∞–π–∫—É‚ùì‚ùì‚ùì\n',
                           '\nüëã –ü—Ä–∏–≤–µ—Ç‚ùóÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ–≤—É—é —É–≥–∞–¥–∞–π–∫—É‚ùóÔ∏è\n',
                           '\n–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é üëãüëãüëã‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –ñ–µ–ª–∞–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –≤ —á–∏—Å–ª–æ–≤—É—é —É–≥–∞–¥–∞–π–∫—É‚ùì\n',
                           '\nüëã–•–µ–π-–•–µ–π‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏èüëã –ö–∞–∫ –Ω–∞ —Å—á–µ—Ç –∏–≥—Ä—ã –≤ —á–∏—Å–ª–æ–≤—É—é —É–≥–∞–¥–∞–π–∫—É‚ùìüòâ\n'])
    print(hallo)
    time.sleep(2)


# –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã
def choice_game():
    print('       üëâ...---===–£ –Ω–∞—Å –¥–≤–∞ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã===---...üëà',
          'üëâ1) –¢—ã —É–≥–∞–¥—ã–≤–∞–µ—à—å —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–≥–∞–¥–∞–ª –∫–æ–º–ø—å—é—Ç–µ—Ä  (1üëà',
          'üëâ2) –¢—ã –∑–∞–≥–∞–¥—ã–≤–∞–µ—à—å —á–∏—Å–ª–æ, –∞ –∫–æ–º–ø—å—é—Ç–µ—Ä –µ–≥–æ —É–≥–∞–¥—ã–≤–∞–µ—Ç (2üëà',
          'üëâ3) –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã', sep='\n')
    time.sleep(1)
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º –∏–≥—Ä—ã –∏–ª–∏ –≤—ã–π—Ç–∏
    print('\n –í–≤–µ–¥–∏ 1 –∏–ª–∏ 2 –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã, –∏–ª–∏ 3 –¥–ª—è –≤—ã—Ö–æ–¥–∞')
    exam_list = ['1', '2', '3']  # –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞
    while True:
        mode = input('üëâ: ')
        if mode not in exam_list:
            print(random.choice(['—Ç—ã –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ 1, 2 –∏–ª–∏ 3', '–î–∞–≤–∞–π –Ω–µ –±—É–¥–µ–º —Ç—É–ø–∏—Ç—å... –í–≤–µ–¥–∏ 1, 2 –∏–ª–∏ 3']))
        else:
            break

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞
    if mode == '1':
        return 1
    elif mode == '2':
        return 2
    else:
        return False


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∏–ª–∏ –≤—Ç–æ—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞
def start_game(number_game):
    if number_game == 1:
        start_user_game()
    elif number_game == 2:
        start_computer_game()


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ —á–∏—Å–ª–∞
def is_valid_digit(digit):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–≤–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–∏—Å–ª–æ –∞ –Ω–µ –±—É–∫–≤—ã –∏–ª–∏ —Å–∏–º–≤–æ–ª—ã
    while True:
        if not digit.isdigit():
            print('‚ùå–ù–µ–µ—Ç‚ùå, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—É, –∞ –Ω–µ –±—É–∫–≤—É –∏–ª–∏ —Å–∏–º–≤–æ–ª =)')
            print('–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑')
            digit = input('üëâ: ')
        else:
            break
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∏—Å–ª–æ
    return int(digit)


# –ü–æ–ª—É—á–∞–µ–º –æ—Ç –∏–≥—Ä–æ–∫–∞ –∫–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫
def get_popit_user():
    time.sleep(1)
    print('–ò —Ç–∞–∫, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–ø—ã—Ç–æ–∫, —á—Ç–æ–±—ã –æ—Ç–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ‚ùì')

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ, –∏ —Å—Ä–∞–∑—É –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–æ–¥–∞ (—Ü–∏—Ñ—Ä–∞/–±—É–∫–≤–∞/—Å–∏–º–≤–æ–ª)
    popit = is_valid_digit(input('üëâ: '))  # –ø–æ–ª—É—á–∞–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö int

    # –ö–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0
    while True:
        if 0 >= popit:
            print('‚ùå–ù–µ–µ—Ç‚ùå, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç 1 –∏ –≤—ã—à–µ‚òùÔ∏è')
            print('–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑')
        else:
            break
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∏—Å–ª–æ –æ—Ç –∏–≥—Ä–æ–∫–∞
    return popit


# –ü–æ–ª—É—á–∞–µ–º –æ—Ç –∏–≥—Ä–æ–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –∏–≥—Ä—ã
def get_range_user_comp():
    time.sleep(1)
    print('\n–•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º –¥–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ªüòÉ')
    time.sleep(1)
    print('\n–ö–∞–∫–æ–µ –±—É–¥–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ‚ùì')
    left_range = is_valid_digit(
        input('üëâ: '))  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ, –∏ —Å—Ä–∞–∑—É –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–æ–¥–∞ (—Ü–∏—Ñ—Ä–∞/–±—É–∫–≤–∞/—Å–∏–º–≤–æ–ª)

    time.sleep(1)
    print('–ö–∞–∫–æ–µ –±—É–¥–µ—Ç –∫–æ–Ω–µ—á–Ω–æ–µ —á–∏—Å–ª–æ‚ùì')
    while True:
        right_range = is_valid_digit(
            input('üëâ: '))  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ, –∏ —Å—Ä–∞–∑—É –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–æ–¥–∞ (—Ü–∏—Ñ—Ä–∞/–±—É–∫–≤–∞/—Å–∏–º–≤–æ–ª)
        if right_range <= left_range:
            print('‚ùå–ù–µ–µ—Ç‚ùå, –∫–æ–Ω–µ—á–Ω–æ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ‚ÄºÔ∏è)')
            print('–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑')
        else:
            break
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è int –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    return left_range, right_range


# –§—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def user_game(popit, l_range, r_range):
    mystery = random.randint(l_range, r_range)  # –ø–æ–ª—É—á–∞–µ–º –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    count_popit = 0  # —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
    time.sleep(1)
    print('\n‚è±‚è±‚è±–î–£–ú–ê–Æ‚è±‚è±‚è±')
    time.sleep(2)
    print('üòà–í—Å—ë, —è –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ‚ùóÔ∏èüòà')
    time.sleep(1)
    for _ in range(popit):  # –∫–æ–ª-–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π == –∫–æ–ª-–≤—É –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ–ø—ã—Ç–æ–∫
        print('üòà–û—Ç–≥–∞–¥—ã–≤–∞–πüòà')
        clue = is_valid_digit(
            input('üëâ: '))  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ, –∏ —Å—Ä–∞–∑—É –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–æ–¥–∞ (—Ü–∏—Ñ—Ä–∞/–±—É–∫–≤–∞/—Å–∏–º–≤–æ–ª)
        time.sleep(1)

        # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –æ—Ç–≥–∞–¥–∞–ª —á–∏—Å–ª–æ, —Å—Ä–∞–∑—É –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –∏–≥—Ä—É
        if clue == mystery:
            count_popit += 1
            win = random.choice(['\nüéáüéáüéá–£–†–ê‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –¢–´ –û–¢–ì–ê–î–ê–õ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏èüéáüéáüéá',
                                 '\nüéá–ö–†–£–¢–û‚ùóÔ∏è –¢–´ –°–ü–†–ê–í–ò–õ–°–Ø‚ùóÔ∏èüéá',
                                 '\nüéáüéáüéá–ù–£ –ù–ò–§–ò–ì–ê –°–ï–ë–ï‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –ö–ê–ö –¢–´ –û–¢–ì–ê–î–ê–õ‚ùì‚ùì‚ùìüéáüéáüéá'])
            print(win)
            time.sleep(1)
            print(f'–¢—ã —É–≥–∞–¥–∞–ª –∑–∞ {count_popit} –ø–æ–ø—ã—Ç–æ–∫')
            count_popit += 1
            break

        # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ
        elif mystery < clue:
            bigger = random.choice(['‚ùå–ù–ï–¢‚ùå', '–ê –≤–æ—Ç –∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æüòù', '–ü–æ–¥—É–º–∞–π —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ‚ùóÔ∏è'])
            print(bigger, '–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ ‚ûñ')
            count_popit += 1

        # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ
        elif mystery > clue:
            smaller = random.choice(['‚ùåüßê‚ùå', 'üòå–ù–ï–êüòå', '–ü–æ—à–µ–≤–µ–ª–∏ –º–æ–∑–≥–∞–º–∏‚ùóÔ∏èü§™ü§™ü§™'])
            print(smaller, '–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ‚ûï')
            count_popit += 1
    # –ö–æ–ª-–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π (–ø–æ–ø—ã—Ç–æ–∫) –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–≥–∞–¥–∞–ª —á–∏—Å–ª–æ
    else:
        not_win = random.choice(['ü§•–¢—ã –ø—Ä–æ–ª–µ—Ç–µ–ª –∫–∞–∫ —Ñ–∞–Ω–µ—Ä–∞ –Ω–∞–¥ –ü–∞—Ä–∏–∂–µ–º‚ùóÔ∏èü§•',
                                 'üòà–•–ê-–•–ê-–•–ê, —Ç–µ–±–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–±–µ–¥–∏—Ç—å –º–µ–Ω—è‚ùóÔ∏èüòà'])
        print(not_win, f'–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {mystery}üòù', sep='\n')


# –§—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
def computer_game(l_range, r_range):
    # –§–æ—Ä–º—É–ª–º–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–ª-–≤–∞ –ø–æ–ø—ã—Ç–æ–∫
    pop = math.ceil(math.log(r_range, 2))
    time.sleep(1)

    # –ë–æ–ª—Ç–æ–ª–æ–≥–∏—è —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º
    print(f'–¢—ã –≤—ã–±—Ä–∞–ª –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç {l_range} –¥–æ {r_range}')
    time.sleep(1)
    print(random.choice(['–•–º–º–º–º...', '–ù—É—É—É—É...', '–ò–∏–∏–∏–∏...']))
    time.sleep(2)
    print(f'–Ø —É–≥–∞–¥–∞—é —Ç–≤–æ–µ —á–∏—Å–ª–æ –∑–∞ {pop} –ø–æ–ø—ã—Ç–æ–∫‚ùóÔ∏èüîÆ')
    time.sleep(2)
    start = input('–ù–∞–ø–∏—à–∏ "–¥–∞" –∏–ª–∏ "+", –µ—Å–ª–∏ –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ\nüëâ: ')
    start_list = ['–¥–∞', '–¥', '+', '–î–∞', '–î–ê', '–î', '–¥–ê', 'lf', 'L', 'Lf', 'LF', 'lF']
    count_pop = 0

    while True:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if start not in start_list:
            print('–Ø –∂–µ –ø–æ–ø—Ä–æ—Å–∏–ª –≤–≤–µ—Å—Ç–∏ "–¥–∞" –∏–ª–∏ "+"')
            start = input('–î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑\nüëâ: ')
        else:
            break

    print('–ö–ª–∞—Å—Å‚ùóÔ∏è –ü–æ–µ—Ö–∞–ª–∏ üöòüöòüöò')
    for _ in range(pop):  # –ö–æ–ª-–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π == –∫–æ–ª-–≤—É –ø–æ–ø—ã—Ç–æ–∫ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º
        middle = (l_range + r_range) // 2  # –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ ==  —Å–µ—Ä–µ–¥–∏–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
        time.sleep(1)

        print(random.choice(['\n‚è±‚è±‚è±–î–£–ú–ê–Æ‚è±‚è±‚è±', '\n–¢–∞–∞–∞–∫, c–µ–π—á–∞—Å...']))
        time.sleep(2)
        print(random.choice(['ü§ì–¢—ã –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ', 'üòé–î—É–º–∞—é, —á—Ç–æ —Ç–≤–æ–µ —á–∏—Å–ª–æ:', 'ü§ñ–≠—Ç–æ —á–∏—Å–ª–æ']), middle)

        time.sleep(1)
        answer = input('–ù–∞–ø–∏—à–∏ "–¥–∞", –µ—Å–ª–∏ —è —É–≥–∞–¥–∞–ª, "+" –µ—Å–ª–∏ —Ç–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ, –∏ "-" –µ—Å–ª–∏ —Ç–≤–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ\nüëâ: ')

        while True:
            if answer not in start_list and answer != '+' and answer != '-':
                print('\n‚ùå‚ùå‚ùå–ù—É –Ω–µ—Ç —É–∂, —Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã–ª –≤–≤–µ—Å—Ç–∏ "–¥–∞", "+" –∏–ª–∏ "-" \n –î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑... \n')
                answer = input('–ü–∏—à–∏...üëâ: ')
            else:
                break
        time.sleep(1)

        if answer in start_list and answer != '+':  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É, –∞ –∫–æ–º–ø—å—é—Ç—Ä–µ —Ä–∞–¥—É–µ—Ç—Å—è –ø–æ–±–µ–¥–µ
            count_pop += 1
            print(random.choice(['–ï–µ–µ–µ—Å—Å—Å, —è —É–≥–∞–¥–∞–ª —Å', '–í–æ—Ç —Ç–∞–∫‚ùóÔ∏è –î–ê‚ùóÔ∏è –£—á–∏–∏–∏—Å—åüòù –Ø —É–≥–∞–¥–∞–ª —Å']), count_pop,
                  '–ø–æ–ø—ã—Ç–∫–∏‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è')
            break

        elif answer == '+':  # –ï—Å–ª–∏ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ
            time.sleep(1)
            print(random.choice(['–ù—É –ª–∞–¥–Ω–æüò°... –±–æ–ª—å—à–µ —Ç–∞–∫ –±–æ–ª—å—à–µüò°...',
                                 '–¢–∞–∞–∫...', '–•–º–º–ºüßê –ê –º–æ–∂–µ—Ç...',
                                 '–¢—ã —Å–µ—Ä—å–µ–∑–Ω–æ‚ÅâÔ∏è –ù—É —Ö–æ—Ä–æ—à–æ...']))
            count_pop += 1
            l_range = middle + 1

        elif answer == '-':  # –ï—Å–ª–∏ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ
            time.sleep(1)
            print(random.choice(['–ê—Ö —Ç—ã –∂... –õ–∞–¥–Ω–æ, –ø–æ–ø—Ä–æ–±—É—é –µ—â–µ...üò§üò§üò§',
                                 '–ù—É –∫–∞–∫ –∂–µ —Ç–∞–∞–∞–∫‚ùì‚ùì –ë–õ–ò–ù ü§¨ü§¨ü§¨',
                                 'üò∂–≠—ç—ç—ç—Ö—Ö—Ö—Ö...']))
            count_pop += 1
            r_range = middle - 1
    else:  # –í–æ–æ–±—â–µ –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –º–æ–≥ –Ω–µ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ. –ù–æ –Ω–∏–∫—Ç–æ –∏ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –Ω–µ–ª—å–∑—è –æ–±–º–∞–Ω—ã–≤–∞—Ç—å)))
        time.sleep(1)
        print(f'–¢–´ –º–µ–Ω—è –æ–±–º–∞–Ω—É–ª, –∏ –ø–æ —ç—Ç–æ–º—É —è –Ω–µ —Å–º–æ–≥ –æ—Ç–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –∑–∞ {pop} –ø–æ–ø—ã—Ç–æ–∫ üò≠üò≠üò≠\n')


# –ó–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def start_user_game():
    # –ó–∞–¥–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω
    star_dig, last_dig = get_range_user_comp()
    # –ó–∞–¥–∞–µ–º –∫–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    popit = get_popit_user()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É, –≥–¥–µ –ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Ç–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ
    user_game(popit, star_dig, last_dig)
    time.sleep(1)


# –ó–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
def start_computer_game():
    # –ó–∞–¥–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω
    start_dig, last_dig = get_range_user_comp()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É, –≥–¥–µ –∫–æ–º–ø—å—é—Ç–µ—Ä –¥–æ–ª–∂–µ–Ω –æ—Ç–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ
    computer_game(start_dig, last_dig)

    time.sleep(1)


# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –∏–≥—Ä—ã
def replay_game():
    print()
    print(random.choice(['üòä–°—ã–≥—Ä–∞–µ–º –µ—â–µ —Ä–∞–∑–æ–∫‚ùìüòä',
                         'üòä–ú–æ–∂–µ—Ç –µ—â–µ –ø–æ–∏–≥—Ä–∞–µ–º‚ùìüòä',
                         'üòä–ñ–µ–ª–∞–µ—à—å –µ—â–µ —Ä–∞–∑ —Å—ã–≥—Ä–∞—Ç—å‚ùìüòä']))

    answer = input('–Ω–∞–ø–∏—à–∏ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç" —Ç—É—Ç üëâ: ')
    answer_list_yes = ['–¥–∞', '–¥', '–î–∞', '–î–ê', '–î', '–¥–ê', 'lf', 'L', 'Lf', 'LF', 'lF']
    answer_list_no = ['–ù–ï–¢', '–ù–µ—Ç', '–Ω–µ—Ç', '–ù', '–Ω', '-', 'N', 'NO', 'No', 'no', 'n', 'YTN', 'Ytn', 'ytn', 'net']

    while True:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        if answer not in answer_list_yes and answer not in answer_list_no:
            print('‚ùå‚ùå‚ùå‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–¢—ã –≤—Ç–∏—Ä–∞–µ—à—å –º–Ω–µ –∫–∞–∫—É—é —Ç–æ –¥–∏—á—å‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùå‚ùå‚ùå')
            answer = input('–Ω–∞–ø–∏—à–∏ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç" —Ç—É—Ç üëâ: ')
        else:
            break

    if answer in answer_list_yes:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–µ–ª–∞–µ—Ç —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑
        print(random.choice(['\nüéÜ–û—Ç–ª–∏—á–Ω–æ‚ùóÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º‚ùóÔ∏èüéÜ\n',
                             '\nüëè–ß—Ç–æ –∂, –ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µüëè\n',
                             '\nüòÇ–ê–∞–∞, –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å‚ùì –ù–∞ –¥–∞–≤–∞–π‚ùóÔ∏èüòÇ\n',
                             '\nüöÄ–ù—É –¥–∞–≤–∞–π‚ùóÔ∏è –ü–æ–µ—Ö–∞–ª–∏üöÄ\n']))
        return True
    elif answer in answer_list_no:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –±–æ–ª—å—à–µ –Ω–µ –∏–≥—Ä–∞—Ç—å
        return False


# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç –ø—Ä–æ—â–∞–Ω–∏—è
def bay_bay():
    print(random.choice(['\n–ù—É –∏ –ª–∞–¥–Ω–æ‚ùóÔ∏è –ù—É –∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞‚ùóÔ∏èüòî',
                         '\n–ó–∞—Ö–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å –µ—â–µ, –ø—Ä–∏—Ö–æ–¥–∏‚ùóÔ∏èüëãüëãüëã',
                         '\nüí•üí•üí•–î–û –°–ö–û–†–´–• –í–°–¢–†–ï–ß–¨‚ùóÔ∏èüí•üí•üí•']))


# –ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫)))
def get_like():
    print()
    words_1 = '*    –µ—Å–ª–∏ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å      *'
    words_2 = '* —Å—Ç–∞–≤—å –ª–∞–π–∫ –ø–æ–¥ –∫–æ–º–º–µ–Ω—Ç–æ–º *'
    words_l1 = list(words_1)
    words_l2 = list(words_2)
    for i in range(28):
        print('*', end='')
        time.sleep(0.01)
    print()
    for i in range(28):
        time.sleep(0.01)
        print(words_1[i], end='')
    print()
    for i in range(28):
        time.sleep(0.01)
        print(words_2[i], end='')
    print()
    for i in range(28):
        time.sleep(0.01)
        print('*', end='')


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
def main():
    # –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    hallo_game()
    while True:
        # –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º
        num_game = choice_game()
        if not num_game:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª 3–π –ø—É–Ω–∫—Ç (–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã), –∑–∞–≤–µ—Ä—à–∞–µ–º —Ü–∏–∫–ª –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ—â–∞–Ω–∏—è
            break
        start_game(num_game)  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–≥—Ä–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–µ–∂–∏–º—É

        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤—Å—ë —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞, –Ω–∞—á–∏–Ω–∞—è —Å –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
        time.sleep(1)
        if replay_game():
            continue
        else:
            break
    # –ü—Ä–æ—â–∞–µ–º—Å—è –∏ –ø—Ä–æ—Å–∏–º –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫
    bay_bay()
    get_like()


# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ (–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã)
if __name__ == '__main__':
    main()
